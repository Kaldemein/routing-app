version: '3.8'

services:
  osrm:
    image: osrm/osrm-backend
    container_name: osrm
    volumes:
      - ./data:/data
    ports:
      - "5000:5000"
    command: >
     sh -c "
        osrm-routed --algorithm mld /data/RU-TA.osrm
      "
    # osrm-extract -p /opt/car.lua /data/RU-TA.pbf &&
    # osrm-partition /data/RU-TA.osrm &&
    # osrm-customize /data/RU-TA.osrm &&    

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  go:
    build:
      context: ./go_microservice/
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - go_db
    container_name: go
    ports: 
      - "9999:9999"
    environment:
      - HTTP_PORT=9999
      - DB_HOST=go_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=email_verification
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - SMTP_USER=routingappnoreply@gmail.com
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
    env_file:
      - .env

  django_db:
    image: postgres:13
    container_name: django_db
    environment:
      POSTGRES_DB: routingapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - django_pgdbdata:/var/lib/postgresql/data/
   
  go_db:
    image: postgres:13
    container_name: go_db
    environment:
      POSTGRES_DB: email_verification
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - go_pgdbdata:/var/lib/postgresql/data/

  django:
    build: 
      context: ./backend/routingapp
      dockerfile: Dockerfile
    depends_on:
      - django_db
      - rabbitmq
    container_name: django
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

    volumes:
      - ./backend/routingapp:/app
    ports:
      - "8000:8000"

  celery:
    container_name: celery
    build:
      context: ./backend/routingapp
      dockerfile: Dockerfile
    command: celery -A routingapp worker --loglevel=info
    volumes:
      - ./backend/routingapp:/app
    depends_on:
      - rabbitmq
      - django_db

  listener:
    container_name: listener
    build: 
      context: ./backend/routingapp
    command: python manage.py listen_rabbitmq
    volumes:
      - ./backend/routingapp:/app
    depends_on:
      - rabbitmq

volumes:
  django_pgdbdata: null
  go_pgdbdata: null
