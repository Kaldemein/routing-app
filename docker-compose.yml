version: '3.8'

services:
  go:
    build:
      context: ./go_microservice/
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - go_db
    container_name: go
    environment:
      - DB_HOST=go_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=email_verification
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - SMTP_USER=routingappnoreply@gmail.com
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
    env_file:
      - .env  # Файл .env для установки переменных окружения


  django_db:
    image: postgres:13
    container_name: django_db
    environment:
      POSTGRES_DB: routingapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - django_pgdbdata:/var/lib/postgresql/data/
  
  go_db:
    image: postgres:13
    container_name: go_db
    environment:
      POSTGRES_DB: email_verification
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - go_pgdbdata:/var/lib/postgresql/data/

    
  django:
    build: 
      context: ./backend/routingapp/
      dockerfile: Dockerfile
    depends_on:
      - django_db
      - rabbitmq
    container_name: django
    command: sh -c "python ./backend/routingapp/manage.py migrate && python ./backend/routingapp/manage.py runserver 0.0.0.0:8000"

    volumes:
      - .:/app
    ports:
      - "8000:8000"


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
  # adminer:
  #   image: adminer
  #   ports:
  #     - 8080:8080

volumes:
  django_pgdbdata: null
  go_pgdbdata: null
